package com.amazon.customskill;

import java.io.IOException;
import java.net.InetAddress;
import java.io.File;

import com.maxmind.geoip2.DatabaseReader;
import com.maxmind.geoip2.model.CityResponse;


public class GetLocation {

	public ServerLocation getLocation(String ipAddress) {

		File database = new File("C:\\Users\\Olga\\Downloads\\GeoLite2-City-CSV_20181120\\GeoLite2-City-CSV_20181120\\GeoLite2-City-Locations-de.csv");
		DatabaseReader dbReader = new DatabaseReader.Builder(database).build();
		
		InetAddress myipAddress = InetAddress.getByName(ipAddress);
		
		CityResponse response = dbReader.city(myipAddress);
	      
	    String countryName = response.getCountry().getName();
	    String cityName = response.getCity().getName();
	    String postal = response.getPostal().getCode();
	    String state = response.getLeastSpecificSubdivision().getName();
		
		return getLocation(myipAddress, database);

	  }

	  public ServerLocation getLocation(String ipAddress, File file) {

		ServerLocation serverLocation = null;

		try {

		serverLocation = new ServerLocation();

		LookupService lookup = new LookupService(file,LookupService.GEOIP_MEMORY_CACHE);
		Location locationServices = lookup.getLocation(ipAddress);

		serverLocation.setCountryCode(locationServices.countryCode);
		serverLocation.setCountryName(locationServices.countryName);
		serverLocation.setRegion(locationServices.region);
		serverLocation.setRegionName(regionName.regionNameByCode(
	             locationServices.countryCode, locationServices.region));
		serverLocation.setCity(locationServices.city);
		serverLocation.setPostalCode(locationServices.postalCode);
		serverLocation.setLatitude(String.valueOf(locationServices.latitude));
		serverLocation.setLongitude(String.valueOf(locationServices.longitude));

		} catch (IOException e) {
			System.err.println(e.getMessage());
		}

		return serverLocation;

	  }
	
}
